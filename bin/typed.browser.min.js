/**
 * @license
 * typed - Static typing for JavaScript - version 0.3.3
 * Copyright 2012, Alex Lawrence
 * Licensed under the MIT license.
 * http://www.opensource.org/licenses/MIT
 */
(function(){function debug(){return debug}function require(e,t){var n=require.resolve(e),r=require.modules[n];if(!r)throw new Error('failed to require "'+e+'" from '+t);return r.exports||(r.exports={},r.call(r.exports,r,r.exports,require.relative(n),global)),r.exports}var global=this;require.modules={},require.resolve=function(e){var t=e,n=e+".js",r=e+"/index.js";return require.modules[n]&&n||require.modules[r]&&r||t},require.register=function(e,t){require.modules[e]=t},require.relative=function(e){return function(t){if("debug"==t)return debug;if("."!=t.charAt(0))return require(t);var n=e.split("/"),r=t.split("/");n.pop();for(var i=0;i<r.length;i++){var s=r[i];".."==s?n.pop():"."!=s&&n.push(s)}return require(n.join("/"),e)}},require.register("typeCheck.js",function(module,exports,require,global){"use strict";var hasType=function(e,t){return t==null?!0:e==null?!1:typeof t=="string"?getNativeType(e)===t||isCustomType(e,t):matchesTypeStructure(e,t)},getNativeType=function(e){var t=/function (.{1,})\(/,n=t.exec(e.constructor.toString());return n&&n.length>1?n[1]:""},isCustomType=function(e,t){return t!=="Object"&&(new Function("a","return a instanceof "+t))(e)},matchesTypeStructure=function(e,t){for(var n in t){if(!t.hasOwnProperty(n))continue;var r=t[n];if(!hasType(e[n],r))return!1}return!0},checkIfTypeIsAvailable=function(type){if(!type||typeof type!="string"||isNativeType(type))return;try{if(eval("typeof "+type+' != "function"'))throw new Error}catch(e){throw new TypeError("Type "+type+" is not available")}},isNativeType=function(e){for(var t=0,n=nativeTypes.length;t<n;t++)if(e===nativeTypes[t])return!0;return!1},getReadableType=function(e){return typeof e=="string"?e:JSON.stringify(e).replace(/"/g,"")},nativeTypes=["Number","Boolean","String","Array","Object","Function"];exports.hasType=hasType,exports.checkIfTypeIsAvailable=checkIfTypeIsAvailable,exports.getReadableType=getReadableType}),require.register("typeParser/commentParser.js",function(e,t,n,r){"use strict";var i=n("../typeCheck"),s=function(e){var t=[],n=e.toString(),r=n.substring(n.indexOf("(")+1,n.indexOf(")"));if(r.length===0)return t;var s=o(r),a=s.length-1;do{var l=f.exec(s[a]);if(l==null)continue;var c=u(l[1]);i.checkIfTypeIsAvailable(c),t[a]=c}while(a-->0);return t},o=function(e){var t=[],n=!1,r="";for(var i=0,s=e.length;i<s;i++){if(!n&&e[i]===","){t.push(r),r="";continue}r+=e[i],e[i]==="{"&&(n=!0),e[i]==="}"&&(n=!1)}return r!==""&&t.push(r),t},u=function(e){return e==="[]"?"Array":e==="{}"?"Object":l.test(e)?a(e):e},a=function(e){return e=e.replace(c,'"$1":"$2"'),JSON.parse(e)},f=/\/\*\s*:\s*(\{.*\}||\[\s*\]||[A-Z_$][0-9A-Z_$]*)\s*\*\//i,l=/\{.*[^\s].*\}/,c=/([A-Z_$][0-9A-Z_$]*)\s*:\s*([A-Z_$][0-9A-Z_$]*)/gi;t.parseTypes=s}),require.register("typeParser/noParser.js",function(e,t,n,r){"use strict";t.parseTypes=function(){return[]}}),require.register("typeParser/suffixParser.js",function(e,t,n,r){"use strict";var i=n("../typeCheck"),s=function(e){var t=[],n=e.toString(),r=n.substring(n.indexOf("(")+1,n.indexOf(")"));if(r.length===0)return t;var s=r.split(","),o=s.length-1;do{var a=u.exec(s[o]);if(a==null)continue;var f=a[1];i.checkIfTypeIsAvailable(f),t[o]=f}while(o-->0);return t},o=function(e){e=="$"&&(e="\\$"),u=new RegExp("\\s*[A-Z$][0-9A-Z$]*"+e+"([0-9A-Z$]*)\\s*","i")},u;o("_"),t.parseTypes=s,t.setTypeSeparator=o}),require.register("typed.js",function(e,t,n,r){"use strict";var i=n("./typeCheck"),s=function(e){if(!s.active)return e;typeof e!="function"&&errorReporting.throwError(e+" is not a function");var t=function(){var n=t.types;for(var r=0,s=arguments.length;r<s;r++)if(!i.hasType(arguments[r],n[r])){var o=i.getReadableType(n[r]);throw new TypeError("Supplied argument "+(r+1)+" is not of type "+o)}return e.apply(this,arguments)};return t.types=s.parser.parseTypes(e)||[],t};s.commentParser=n("./typeParser/commentParser"),s.suffixParser=n("./typeParser/suffixParser"),s.noParser=n("./typeParser/noParser"),s.parser=s.commentParser,s.active=!0,e.exports=s});var exp=require("typed");"undefined"!=typeof module?module.exports=exp:typed=exp})();